---
extension: html
filter:
- erb
- markdown
dirty: true
proposal: true
talk: true
selected: false
layout: event_pitt
author: Brian Nuszkowski 
title: "Handling The Rush"
---

**Abstract:**

Congratulations! Your site has just gone big. Depending on how thorough you’ve been with load testing, you may or may not be celebrating this impending flood of user traffic. This talk will elaborate on the topic of load testing, which often receives limited coverage among performance and scaling discussions. I'll define what a load testing strategy should look like and elaborate on several of its components.

This talk captures the ideas and results of over a years worth of work defining the load testing strategy that was used for Domino’s Pizza’s online ordering system. When I first started as a Site Reliability Engineer for Domino’s Pizza, while online ordering traffic growth did occur, our traffic patterns were relatively predictable. But, as the business steadily grew towards 50% online orders and the company was able to craft high value, high volume promotions, my team and I quickly realized we needed to be certain we could handle any volume of traffic that was thrown at us. Our services were fast, but how did they perform under pressure? 

So, I sought the guidance of several load testing vendors and soon discovered that a mostly generic formula was being used across the industry: Throw as much traffic as you can at your site and see when it breaks. This method disappointed and most importantly, failed us, so my team and I decided to seek out some answers for ourselves. From our work, I was able to identify 5 areas that provided us with a framework to generate successful and realistic load tests. It is my intention that this information will reach other companies who are experiencing similar issues and in turn assist them in developing a realistic and accurate load testing strategy for their sites. If Success = Fast + Vast, here, I’ll be covering vast. 

The topics include:

Understanding and testing with real user data - Finding out what your users are actually doing and simulate them as closely as possible. We were under the assumption that customer behavior was simple, streamlined, and predicable. So, we focused on a single metric that was accomplished by a single workflow: Orders Per Minute (OPM). Our initial tests were only concerned this metric, which ended up making our tests highly inaccurate. In order to gain accurate insight into user behavior, we commissioned a web analytics analyst to identify our most popular customer work flows. From this data, we discovered that customer behavior was not what was assumed. Customers often took very different approaches to accomplishing the same end goal of ordering a pizza. The important part here is that this new workflow utilized our services in a different fashion which in turn generated a different type of load that was different from the initial workflow we tested against. Additionally, we discovered that most of our customers, weren’t actually customers. A significant amount of the traffic was from users who would browse the site, generate very organic traffic, then simply leave, not falling into the ‘customers placing an order’ category. The testing scope then changed from “How many orders can we handle, to how many customers can we handle, whether they purchase from us or not.” This in conjunction with access and application log analysis is essential to understand and re-generate real user traffic.

**Speaker:**
Brian Nuszkowski 
