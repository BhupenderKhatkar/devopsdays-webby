---
extension: html
filter:
- erb
- markdown
dirty: true
proposal: true
talk: true
selected: false
layout: event
author: Chris Maier
title: "The Importance of Software Packaging For Release Management"
---

**Abstract:**
As an operations person with over 15 years of experience working on, maintaining, and supporting large enterprises, SaaS services, and cloud computing, I want to present the operations side of what I perceive to be differing opinions on software packaging, why all software should be packaged in an OS native format, and software patching as part of the release management life-cycle.

Many release management processes fail to fully comprehend the value of building and using native OS packages - like RPM, DEB, MSI, etc.  I would like to present the thought process from the operations perspective on why using anything but an OS package to install software is "problematic" for successfully releasing and maintaining stable server environments.

Discussion points will be focused on RPM's for the sake of time - but presented conceptually so the methods can be applied to other OS package management systems.

Perspectives, opinions, and answers to the following items will be included:

Why do those pesky operations people always want development to deliver software as "RPM's" or "DEB's" ?

How do you ensure all nodes are running exactly the same base software and components without specifying each and every file in your configuration management tool like puppet or chef?

How do you easily patch your systems as part of your release cycle?

Why should a compiler not be installed on a production system?

Why should production systems not use developer short cuts like pip and gem installations ?

Do you really want a war file in an RPM?  What value could that possibly add to the operational stability and release management cycle?

How do you ensure you can build a new node identical to one built 6 months or a year ago when scaling is needed?

How do you quickly and easily roll back a bad release?

What tools, methods, and strategies do you suggest if we are going to buy in to this and use native OS packaging for all software?



**Speaker:**

Chris Maier
